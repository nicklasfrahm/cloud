name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    permissions:
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.GOOGLE_PROJECT }}
          service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Plan changes
        run: make plan

      - name: Dump plan
        id: dump
        run: |
          {
            echo 'plan<<EOF'
            cat tofu.log
            echo EOF
          } >>"$GITHUB_OUTPUT"

      - name: Find plan comment
        uses: peter-evans/find-comment@v3
        id: find
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "[OpenTofu plan](https://opentofu.org)"

      - name: Publish plan
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸš§ [OpenTofu plan](https://opentofu.org) ðŸš§

            ```txt
            ${{ steps.dump.outputs.plan }}
            ```
          edit-mode: replace

  apply:
    name: Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.GOOGLE_PROJECT }}
          service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Apply changes
        run: make apply

  validate:
    name: Validate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true

      - name: Install dependencies
        run: go mod download

      - name: Validate manifests
        run: go run cmd/cloudctl/*.go config validate ./configs

      - name: Check for changes
        id: changes
        run: |
          make generate manifests

          diff=/tmp/diff.txt

          if ! git diff --exit-code >"$diff"; then
            {
              echo 'diff<<EOF'
              cat "$diff"
              echo EOF
            } >>"$GITHUB_OUTPUT"
          else
            echo "diff=" >>"$GITHUB_OUTPUT"
          fi

      - name: Find code generation comment
        uses: peter-evans/find-comment@v3
        id: find
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "[OpenTofu plan](https://opentofu.org)"

      - name: Publish code generation changes
        uses: peter-evans/create-or-update-comment@v4
        if: steps.changes.outputs.changes != ''
        with:
          comment-id: ${{ steps.find.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸš§ Code generation changes ðŸš§

            Please run `make generate manifests` and commit the changes to update the manifests.

            ```diff
            ${{ steps.changes.outputs.diff }}
            ```
          edit-mode: replace

      - name: Delete code generation comment
        if: steps.changes.outputs.changes == '' && steps.find.outputs.comment-id != ''
        run: gh api /repos/${{ github.repository }}/issues/comments/${{ steps.find.outputs.comment-id }} -X DELETE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail on code generation changes
        if: steps.changes.outputs.changes != ''
        run: exit 1

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true

      - name: Install dependencies
        run: go mod download

      - name: Build manifests
        run: go run cmd/cloudctl/*.go config build ./configs ./build

      - name: Publish index.html
        run: cp public/index.html build/index.html

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:v3
        with:
          repository-url: https://github.com/${{ github.repository }}
          branches: |
            [
              "main"
            ]
          plugins: |
            [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github"
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
